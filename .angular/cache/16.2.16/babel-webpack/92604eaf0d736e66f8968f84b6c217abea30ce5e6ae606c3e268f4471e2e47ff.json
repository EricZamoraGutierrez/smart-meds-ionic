{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { doc, getDoc, updateDoc } from '@angular/fire/firestore';\nimport { getFirestore } from 'firebase/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/fire/firestore\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ionic/angular\";\nlet PerfilPage = /*#__PURE__*/(() => {\n  var _PerfilPage;\n  class PerfilPage {\n    constructor(formBuilder, userService, firestore, router) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.firestore = firestore;\n      this.router = router;\n      this.imageSource = null;\n      this.formData = []; // Arreglo para almacenar los datos del formulario\n      //userdata\n      this.userData = {\n        name: \"\",\n        email: \"\",\n        lastname: \"\",\n        phone: \"\"\n        //lastname\n      };\n\n      this.ProfilePic = \"\";\n      this.finishedLoading = false;\n      this.myForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required]],\n        // password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.[a-z])(?=.[A-Z]).{8,}$/)]],\n        lastname: ['', Validators.required],\n        phone: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.getUserData();\n      // this.userID = this.userService.getUser();\n    }\n\n    displayImage(event) {\n      const input = event.target;\n      if (input.files && input.files[0]) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            this.imageSource = reader.result;\n          }\n        };\n        console.log(input.files[0]);\n        reader.readAsDataURL(input.files[0]);\n        this.userService.saveProfilePic(input.files[0]);\n        this.ProfilePic = input.files[0].name;\n        updateDoc(this.userDoc, {\n          ProfilePic: \"images\" + this.ProfilePic\n        }), error => {\n          console.log(error);\n        };\n      }\n    }\n    submitForm() {\n      if (this.myForm.valid) {\n        this.formData.push(this.myForm.value);\n        // Reiniciar el formulario\n        // this.myForm.reset();\n        console.log('Formulario enviado. Datos guardados:', this.formData);\n        this.updateUserData(this.myForm.value.name, this.myForm.value.phone, this.myForm.value.lastname, this.userDoc, this.userID);\n      }\n    }\n    regresar() {\n      this.router.navigate(['/tabs/tab4']);\n    }\n    isFormValid() {\n      return this.myForm.valid;\n    }\n    getUserData() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const db = getFirestore();\n        const id = yield _this.userService.getUser();\n        // this.userService.getProfilePic(id).then((url) => {\n        //   this.imageSource = url;\n        // });\n        _this.userID = id;\n        console.log(_this.userID);\n        const docref = doc(db, 'Users', id);\n        _this.userDoc = docref;\n        console.log(docref);\n        try {\n          const docSnap = yield getDoc(docref);\n          console.log(docSnap.data());\n          const data = docSnap.data();\n          _this.userData.email = data.email;\n          _this.userData.name = data.name;\n          _this.userData.phone = data.phone;\n          _this.userData.lastname = data.lastname;\n          _this.ProfilePic = data.ProfilePic;\n        } catch (error) {\n          console.log(error);\n        }\n        _this.userService.getProfilePicURL(_this.ProfilePic).then(url => {\n          _this.imageSource = url;\n        });\n        //Usar esta variable para definir cuando quitar la barra de carga\n        _this.finishedLoading = true;\n      })();\n    }\n    updateUserData(name, phone, lastname, dbRef, id) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.userService.updateUserData(name, phone, lastname, dbRef, id).then(() => {\n          console.log(\"Datos actualizados\");\n        }).catch(error => {\n          console.log(error);\n        });\n        _this2.getUserData();\n      })();\n    }\n  }\n  _PerfilPage = PerfilPage;\n  _PerfilPage.ɵfac = function PerfilPage_Factory(t) {\n    return new (t || _PerfilPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Firestore), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  _PerfilPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _PerfilPage,\n    selectors: [[\"app-perfil\"]],\n    decls: 53,\n    vars: 5,\n    consts: [[\"slot\", \"start\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"chevron-back\", 2, \"font-size\", \"38px\"], [1, \"titulo\"], [\"slot\", \"end\"], [\"slot\", \"icon-only\", \"name\", \"settings\", 2, \"font-size\", \"38px\"], [1, \"ion-justify-content-center\", \"ion-align-items-center\"], [\"size\", \"auto\", 1, \"profile-container\"], [1, \"avatar-wrapper\"], [1, \"profile-avatar\"], [\"src\", \"assets/images/conexioncompartir.png\", \"alt\", \"Profile Image\"], [\"name\", \"create-outline\", 1, \"edit-icon\"], [1, \"profile-name\"], [1, \"datos\"], [\"lines\", \"none\"], [\"label\", \"Nombres\", \"labelPlacement\", \"stacked\", 3, \"value\"], [\"fill\", \"clear\", \"slot\", \"end\"], [\"name\", \"create-outline\"], [\"label\", \"Apellidos\", \"labelPlacement\", \"stacked\", 3, \"value\"], [\"label\", \"Correo\", \"labelPlacement\", \"stacked\", 3, \"value\"], [\"label\", \"Contrase\\u00F1a\", \"labelPlacement\", \"stacked\", 3, \"value\"], [\"name\", \"eye\"], [\"label\", \"telefono\", \"labelPlacement\", \"stacked\", 3, \"value\"], [1, \"cerrar\"], [\"name\", \"lock-open-outline\", \"slot\", \"start\"], [\"name\", \"chevron-forward\", \"slot\", \"end\"], [\"name\", \"exit-outline\", \"slot\", \"start\"]],\n    template: function PerfilPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-toolbar\")(1, \"ion-buttons\", 0);\n        i0.ɵɵlistener(\"click\", function PerfilPage_Template_ion_buttons_click_1_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵelementStart(2, \"ion-button\");\n        i0.ɵɵelement(3, \"ion-icon\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"h2\");\n        i0.ɵɵtext(6, \"Mi Perfil\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 3)(8, \"ion-button\");\n        i0.ɵɵelement(9, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"ion-content\")(11, \"ion-grid\")(12, \"ion-row\", 5)(13, \"ion-col\", 6)(14, \"div\", 7)(15, \"ion-avatar\", 8);\n        i0.ɵɵelement(16, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"ion-icon\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"h2\", 11);\n        i0.ɵɵtext(19, \"Nombre Apellido\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"ion-list\", 12)(21, \"ion-item\", 13);\n        i0.ɵɵelement(22, \"ion-input\", 14);\n        i0.ɵɵelementStart(23, \"ion-button\", 15);\n        i0.ɵɵelement(24, \"ion-icon\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"ion-item\", 13);\n        i0.ɵɵelement(26, \"ion-input\", 17);\n        i0.ɵɵelementStart(27, \"ion-button\", 15);\n        i0.ɵɵelement(28, \"ion-icon\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"ion-item\", 13);\n        i0.ɵɵelement(30, \"ion-input\", 18);\n        i0.ɵɵelementStart(31, \"ion-button\", 15);\n        i0.ɵɵelement(32, \"ion-icon\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"ion-item\", 13);\n        i0.ɵɵelement(34, \"ion-input\", 19);\n        i0.ɵɵelementStart(35, \"ion-button\", 15);\n        i0.ɵɵelement(36, \"ion-icon\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"ion-item\", 13);\n        i0.ɵɵelement(38, \"ion-input\", 21);\n        i0.ɵɵelementStart(39, \"ion-button\", 15);\n        i0.ɵɵelement(40, \"ion-icon\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"div\", 22)(42, \"ion-list\")(43, \"ion-item\", 13);\n        i0.ɵɵelement(44, \"ion-icon\", 23);\n        i0.ɵɵelementStart(45, \"ion-label\");\n        i0.ɵɵtext(46, \"Pol\\u00EDtica Y Privacidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"ion-icon\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"ion-item\", 13);\n        i0.ɵɵelement(49, \"ion-icon\", 25);\n        i0.ɵɵelementStart(50, \"ion-label\");\n        i0.ɵɵtext(51, \"Cerrar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"ion-icon\", 24);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(22);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.UserData.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.lastname);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.phone);\n      }\n    },\n    dependencies: [i5.IonAvatar, i5.IonButton, i5.IonButtons, i5.IonCol, i5.IonContent, i5.IonGrid, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonList, i5.IonRow, i5.IonToolbar, i5.TextValueAccessor],\n    styles: [\"@charset \\\"UTF-8\\\";.bar[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between}h1[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;text-align:center;padding:20px}.content-box[_ngcontent-%COMP%]{width:300px;margin:0 auto;height:450px}.form-wrapper[_ngcontent-%COMP%]{margin-top:20px}form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.custom-file[_ngcontent-%COMP%]{position:relative;text-align:center}.custom-file[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.file-label[_ngcontent-%COMP%]{background-color:#6e85b7;color:#fff;padding:8px 12px;border-radius:4px;cursor:pointer;margin-top:10px}.file-text[_ngcontent-%COMP%]{color:#fff;margin-top:5px}.image-preview[_ngcontent-%COMP%]{text-align:center;margin:0 auto;width:150px;height:150px;border-radius:100%;overflow:hidden;display:flex;justify-content:center;align-items:center}.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:150px;min-height:150px;max-height:150px;border-radius:100%;display:block;margin-top:40px}input[type=submit][_ngcontent-%COMP%]{background-color:#333232;color:#fff;border-radius:5px;padding:8px 16px;border:none;cursor:pointer;margin-top:10px}input[type=submit][_ngcontent-%COMP%]:hover{background-color:#333}.background-box[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:25vh;z-index:-1}.profile-section[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return PerfilPage;\n})();\nexport { PerfilPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}