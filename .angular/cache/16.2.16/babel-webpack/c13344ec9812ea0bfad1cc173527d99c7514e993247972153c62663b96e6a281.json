{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { LocalNotifications } from '@capacitor/local-notifications';\nimport * as i0 from \"@angular/core\";\nlet NotificationsService = /*#__PURE__*/(() => {\n  var _NotificationsService;\n  class NotificationsService {\n    constructor() {}\n    //usar esta funcion en el nuevo formulario de medicamentos\n    schedulePrescription(MedName, MedInterval, MedComment) {\n      return _asyncToGenerator(function* () {\n        yield LocalNotifications.schedule({\n          notifications: [{\n            id: 1,\n            title: MedName + \"cada\" + MedInterval + \"horas\",\n            body: MedComment,\n            schedule: {\n              on: {\n                hour: MedInterval\n              },\n              repeats: true\n            }\n          }]\n        });\n      })();\n    }\n    scheduleTest(MedName, MedInterval, MedComment) {\n      return _asyncToGenerator(function* () {\n        let options = {\n          notifications: [{\n            id: 1,\n            title: MedName,\n            body: MedComment,\n            summaryText: \"Pls work\",\n            schedule: {\n              on: {\n                hour: MedInterval\n              },\n              repeats: true,\n              allowWhileIdle: true\n            }\n          }]\n        };\n        try {\n          yield LocalNotifications.schedule(options);\n        } catch {\n          console.log(\"error\");\n        }\n        // await LocalNotifications.schedule({\n        //   notifications: [\n        //     {\n        //       id: 1,\n        //       title: MedName,\n        //       body: MedComment\n        //     }]\n        // }).then(() => {\n        //   console.log(\"Notification set\");\n        // });\n      })();\n    }\n  }\n  _NotificationsService = NotificationsService;\n  _NotificationsService.ɵfac = function NotificationsService_Factory(t) {\n    return new (t || _NotificationsService)();\n  };\n  _NotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _NotificationsService,\n    factory: _NotificationsService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationsService;\n})();\nexport { NotificationsService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}