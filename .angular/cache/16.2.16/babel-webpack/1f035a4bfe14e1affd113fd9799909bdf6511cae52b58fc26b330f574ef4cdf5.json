{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { getFirestore } from '@angular/fire/firestore';\nimport { register } from 'swiper/element';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/prescription-storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/fire/firestore\";\nimport * as i5 from \"../services/user.service\";\nimport * as i6 from \"@ionic/angular\";\nregister();\nlet AgregarPage = /*#__PURE__*/(() => {\n  var _AgregarPage;\n  class AgregarPage {\n    constructor(formBuilder, prescriptionStorage, router, firestore, userService) {\n      this.formBuilder = formBuilder;\n      this.prescriptionStorage = prescriptionStorage;\n      this.router = router;\n      this.firestore = firestore;\n      this.userService = userService;\n      this.formDataGeneral = [];\n      this.formDataTiempo = [];\n      this.formDataOtros = [];\n      this.db = getFirestore();\n      //User ID\n      this.userId = \"\";\n      //Medicine ID\n      this.medId = \"\";\n      //userData = {\n      //name: \"\",\n      //email: \"\",\n      //}\n      this.expanded = false;\n      this.expanded2 = false;\n      this.expanded3 = false;\n      this.expanded4 = false;\n      this.hours = Array.from({\n        length: 24\n      }, (_, i) => i);\n      this.expanded = true, this.expanded2 = true, this.expanded3 = true, this.expanded4 = true, this.myFormGeneral = this.formBuilder.group({\n        name: ['', Validators.required],\n        dosis: ['', Validators.required],\n        medida: ['', Validators.required],\n        presenForm: ['', Validators.required]\n      });\n      this.myFormTiempo = this.formBuilder.group({\n        selectedHour: ['', Validators.required],\n        inicio: ['', Validators.required],\n        fin: ['', Validators.required]\n      });\n      this.myFormOtros = this.formBuilder.group({\n        peso: ['', Validators.required],\n        repisaForm: ['', Validators.required],\n        contra: ['', Validators.required],\n        comentario: ['', Validators.required]\n      });\n    }\n    redirectToHomePage() {\n      setTimeout(() => {\n        this.router.navigate(['/tabs/tab1']); // Redirecciona a la página \"home\"\n      }, 2000);\n    }\n    ngOnInit() {\n      this.getID();\n    }\n    getID() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const id = yield _this.userService.getUser();\n        _this.userId = id;\n        console.log(_this.userId);\n      })();\n    }\n    submitForm() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.myFormGeneral.valid && _this2.myFormTiempo.valid && _this2.myFormOtros.valid) {\n          _this2.formDataGeneral.push(_this2.myFormGeneral.value), _this2.formDataTiempo.push(_this2.myFormTiempo.value), _this2.formDataOtros.push(_this2.myFormOtros.value),\n          // Reiniciar el formulario\n          _this2.myFormGeneral.reset();\n          _this2.myFormTiempo.reset();\n          _this2.myFormOtros.reset();\n          _this2.saveMeds();\n        }\n      })();\n    }\n    isFormValidGeneral() {\n      return this.myFormGeneral.valid;\n    }\n    isFormValidTiempo() {\n      return this.myFormTiempo.valid;\n    }\n    isFormValidOtros() {\n      return this.myFormOtros.valid;\n    }\n    toggleCard() {\n      this.expanded = !this.expanded;\n    }\n    toggleCard2() {\n      this.expanded2 = !this.expanded2;\n    }\n    toggleCard3() {\n      this.expanded3 = !this.expanded3;\n    }\n    toggleCard4() {\n      this.expanded4 = !this.expanded4;\n    }\n    //Aqui empieza mi desvergue\n    savePrescription() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        yield _this3.prescriptionStorage.addPrescription(_this3.formDataTiempo[0].selectedHour, _this3.formDataTiempo[0].inicio, _this3.formDataTiempo[0].fin, _this3.userId, _this3.medId).then(res => {\n          console.log(res);\n        });\n      })();\n    }\n    saveOtherDetails() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        yield _this4.prescriptionStorage.addMedDetails(_this4.formDataOtros[0].peso, _this4.formDataOtros[0].repisaForm, _this4.formDataOtros[0].contra, _this4.formDataOtros[0].comentario, _this4.medId).then(res => {\n          console.log(res);\n        });\n      })();\n    }\n    saveMeds() {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        yield _this5.prescriptionStorage.addMeds(_this5.formDataGeneral[0].name, _this5.formDataGeneral[0].dosis, _this5.formDataGeneral[0].medida, _this5.formDataGeneral[0].presenForm).then(response => {\n          console.log(response);\n          _this5.medId = response.id;\n          console.log(_this5.medId);\n          _this5.savePrescription();\n          _this5.saveOtherDetails();\n        });\n      })();\n    }\n  }\n  _AgregarPage = AgregarPage;\n  _AgregarPage.ɵfac = function AgregarPage_Factory(t) {\n    return new (t || _AgregarPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PrescriptionStorageService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Firestore), i0.ɵɵdirectiveInject(i5.UserService));\n  };\n  _AgregarPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _AgregarPage,\n    selectors: [[\"app-agregar\"]],\n    decls: 12,\n    vars: 0,\n    template: function AgregarPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Swipe\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"swiper-container\")(6, \"swiper-slide\");\n        i0.ɵɵtext(7, \"Slide 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"swiper-slide\");\n        i0.ɵɵtext(9, \"Slide 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"swiper-slide\");\n        i0.ɵɵtext(11, \"Slide 3\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i6.IonContent, i6.IonHeader, i6.IonTitle, i6.IonToolbar],\n    styles: [\"ion-item[_ngcontent-%COMP%]{--padding-start: 0}h1[_ngcontent-%COMP%]{margin-left:20px}ion-card[_ngcontent-%COMP%]{border-radius:30px;border-color:#acacac;border-width:2px;border-style:solid}ion-card-header[_ngcontent-%COMP%]{border-radius:30px;border-color:#fff;border-width:2px;border-style:solid}ion-select[_ngcontent-%COMP%]{padding-left:5px;margin-left:10px}ion-label[_ngcontent-%COMP%]{margin-left:5px}.general[_ngcontent-%COMP%]   ion-card-header[_ngcontent-%COMP%]{background-color:#88a4d8}.tiempo[_ngcontent-%COMP%]   ion-card-header[_ngcontent-%COMP%]{background-color:#88a4d8}.consumo[_ngcontent-%COMP%]   ion-card-header[_ngcontent-%COMP%]{background-color:#88a4d8}.todo[_ngcontent-%COMP%]   ion-input[_ngcontent-%COMP%]{width:80%;margin-left:5%;margin-bottom:6%}.nombre[_ngcontent-%COMP%]{margin-bottom:30px;margin-top:10px}.dosis[_ngcontent-%COMP%], .presentacion[_ngcontent-%COMP%], .precio[_ngcontent-%COMP%]{margin-bottom:30px}\"]\n  });\n  return AgregarPage;\n})();\nexport { AgregarPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}