{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc, query, where, getDocs, updateDoc, doc } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nlet PrescriptionStorageService = /*#__PURE__*/(() => {\n  var _PrescriptionStorageService;\n  class PrescriptionStorageService {\n    constructor(firestore) {\n      this.firestore = firestore;\n    }\n    addPrescription(selectedHour, startDate, endDate, UserID, MedID) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const dbref = collection(_this.firestore, 'Prescripciones');\n        return addDoc(dbref, {\n          interval: selectedHour,\n          start: startDate,\n          end: endDate,\n          UserID: UserID,\n          MedID: MedID\n        });\n      })();\n    }\n    addMeds(name, dosis, medida, presen) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const dbref = collection(_this2.firestore, 'Medicaciones');\n        return addDoc(dbref, {\n          name: name,\n          dosis: dosis,\n          medida: medida,\n          presen: presen\n        });\n      })();\n    }\n    addMedDetails(peso, repisa, contra, comentario, MedID) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const dbref = doc(_this3.firestore, 'Medicaciones', MedID);\n        return updateDoc(dbref, {\n          Detalles: {\n            peso: peso,\n            repisa: repisa,\n            contra: contra,\n            comentario: comentario,\n            MedID: MedID\n          }\n        });\n      })();\n    }\n    getMeds(UserID) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const dbref = collection(_this4.firestore, 'Medicaciones');\n        const q = query(dbref, where('UserID', '==', UserID));\n        const querySnapshot = yield getDocs(q);\n        const meds = querySnapshot.docs.map(doc => doc.data());\n        return meds;\n      })();\n    }\n    getPrescriptions(UserID) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        const dbref = collection(_this5.firestore, 'Prescripciones');\n        const q = query(dbref, where('UserID', '==', UserID));\n        const querySnapshot = yield getDocs(q);\n        const prescriptions = querySnapshot.docs.map(doc => doc.data());\n        return prescriptions;\n      })();\n    }\n    getMedDetails(MedID) {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        const dbref = collection(_this6.firestore, 'Medicaciones');\n        const q = query(dbref, where('MedID', '==', MedID));\n        const querySnapshot = yield getDocs(q);\n        const medDetails = querySnapshot.docs.map(doc => doc.data());\n        return medDetails;\n      })();\n    }\n  }\n  _PrescriptionStorageService = PrescriptionStorageService;\n  _PrescriptionStorageService.ɵfac = function PrescriptionStorageService_Factory(t) {\n    return new (t || _PrescriptionStorageService)(i0.ɵɵinject(i1.Firestore));\n  };\n  _PrescriptionStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _PrescriptionStorageService,\n    factory: _PrescriptionStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return PrescriptionStorageService;\n})();\nexport { PrescriptionStorageService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}