{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc } from '@angular/fire/firestore';\nimport { Toast } from '@capacitor/toast';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/fire/firestore\";\nimport * as i4 from \"../services/login-check.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@ionic/angular\";\nfunction LoginPage_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-card\")(2, \"h2\", 4);\n    i0.ɵɵtext(3, \"Iniciar sesion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 5);\n    i0.ɵɵtext(5, \"Inicia sesion con tu correo y contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 6);\n    i0.ɵɵtext(8, \"Correo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"ion-input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 6);\n    i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"ion-input\", 8);\n    i0.ɵɵelementStart(14, \"ion-button\", 9);\n    i0.ɵɵelement(15, \"ion-icon\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 11)(17, \"h6\");\n    i0.ɵɵtext(18, \"\\u00BFOlvidaste tu contrase\\u00F1a?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"ion-button\", 12);\n    i0.ɵɵtext(20, \"Acceder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 13)(22, \"p\");\n    i0.ɵɵtext(23, \"\\u00BFAun no tienes una cuenta? Registrate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LoginPage_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"ion-card\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nlet LoginPage = /*#__PURE__*/(() => {\n  var _LoginPage;\n  class LoginPage {\n    constructor(UserService, router, firestore, check) {\n      this.UserService = UserService;\n      this.router = router;\n      this.firestore = firestore;\n      this.check = check;\n      this.showemailError = /*#__PURE__*/_asyncToGenerator(function* () {\n        yield Toast.show({\n          text: 'Correo invalido'\n        });\n      });\n      this.showpaswordError = /*#__PURE__*/_asyncToGenerator(function* () {\n        yield Toast.show({\n          text: 'Contraseña invalida'\n        });\n      });\n      this.showemailUse = /*#__PURE__*/_asyncToGenerator(function* () {\n        yield Toast.show({\n          text: 'Correo ya en uso'\n        });\n      });\n      this.showloginError = /*#__PURE__*/_asyncToGenerator(function* () {\n        yield Toast.show({\n          text: 'Usuario o contraseña incorrectos'\n        });\n      });\n      this.showDataError = /*#__PURE__*/_asyncToGenerator(function* () {\n        yield Toast.show({\n          text: 'Datos incompletos'\n        });\n      });\n      this.show = true;\n      this.selectedTab = 'tab1';\n      this.userData = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        lastname: \"\"\n      };\n      this.login = {\n        email: \"\",\n        pass: \"\"\n      };\n      this.register = {\n        name: \"\",\n        email: \"\",\n        pass: \"\"\n      };\n    }\n    ngOnInit() {}\n    registerUser(email, password) {\n      console.log(email, password);\n      this.UserService.register({\n        email,\n        password\n      }).then(response => {\n        console.log(\"Success Register!\");\n        this.check.setLogin(email, password);\n        if (response) {\n          console.log(response.user.uid);\n          this.show = false;\n          this.uid = response.user.uid;\n          //boton de carga pls!!!\n        } else {\n          console.log(\"Error Register!\");\n        }\n      }).catch(err => {\n        console.log(err);\n        if (err.code == \"auth/email-already-in-use\") {\n          this.loginUser(email, password);\n          this.showemailUse();\n        }\n        if (err.code == \"auth/invalid-email\") {\n          console.log(\"Invalid Email\");\n          this.showemailError();\n        }\n        if (err.code == \"auth/weak-password\") {\n          console.log(\"Weak Password\");\n          this.showpaswordError();\n        }\n      });\n    }\n    loginUser(email, password) {\n      this.UserService.login({\n        email,\n        password\n      }).then(response => {\n        console.log(\"Success Login!\");\n        this.check.setLogin(email, password);\n        if (response) {\n          console.log(response);\n          this.router.navigate(['/tabs']);\n          this.UserService.store(email);\n        } else {\n          console.log(\"Error Login!\");\n          //aviso de error \n        }\n      }).catch(err => {\n        console.log(err);\n        this.showloginError();\n      });\n    }\n    saveUserData(name, lastname, phone, email) {\n      if (name == \"\" || lastname == \"\" || phone == \"\" || email == \"\") {\n        this.showDataError();\n        return;\n      } else {\n        const loginid = this.uid;\n        const ProfilePic = \"imagen_2023-07-10_140810894.png\";\n        const dbref = collection(this.firestore, 'Users');\n        addDoc(dbref, {\n          name,\n          lastname,\n          phone,\n          email,\n          loginid,\n          ProfilePic\n        }).then(response => {\n          console.log(\"Success!\");\n          console.log(response);\n          this.router.navigate(['/tabs']);\n          //crear una tab de transición en el futuro\n        }).catch(err => {\n          console.log(err);\n          //DEBEMOS HACER VALIDACIONES DE LOS DATOS\n        });\n\n        this.UserService.store(email);\n      }\n    }\n  }\n  _LoginPage = LoginPage;\n  _LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || _LoginPage)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Firestore), i0.ɵɵdirectiveInject(i4.LoginCheckService));\n  };\n  _LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"tab1\"], [\"value\", \"tab2\"], [4, \"ngIf\"], [1, \"login-title\"], [1, \"login-subtitle\"], [\"position\", \"stacked\"], [\"placeholder\", \"ejemplo@gmail\"], [\"placeholder\", \"********\"], [\"fill\", \"clear\", \"slot\", \"end\"], [\"name\", \"eye\"], [1, \"forgot-password\"], [\"shape\", \"round\", \"fill\", \"clear\", 1, \"login-button\"], [1, \"signup-link\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-segment\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_segment_ngModelChange_0_listener($event) {\n          return ctx.selectedTab = $event;\n        });\n        i0.ɵɵelementStart(1, \"ion-segment-button\", 1);\n        i0.ɵɵtext(2, \" Iniciar sesion \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ion-segment-button\", 2);\n        i0.ɵɵtext(4, \" Registrarse \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-content\");\n        i0.ɵɵtemplate(6, LoginPage_ng_container_6_Template, 24, 0, \"ng-container\", 3);\n        i0.ɵɵtemplate(7, LoginPage_ng_container_7_Template, 2, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTab);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === \"tab1\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === \"tab2\");\n      }\n    },\n    dependencies: [i5.NgIf, i6.NgControlStatus, i6.NgModel, i7.IonButton, i7.IonCard, i7.IonContent, i7.IonIcon, i7.IonInput, i7.IonItem, i7.IonLabel, i7.IonSegment, i7.IonSegmentButton, i7.SelectValueAccessor, i7.TextValueAccessor],\n    styles: [\"ion-card[_ngcontent-%COMP%]{box-shadow:none;padding:20px}ion-content[_ngcontent-%COMP%]{text-align:center;padding:20px}.login-title[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#0c487a;margin-bottom:10px}.login-subtitle[_ngcontent-%COMP%]{font-size:14px;color:#000;margin-bottom:20px}.forgot-password[_ngcontent-%COMP%]{text-align:right;margin-bottom:20px}.forgot-password[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-size:14px}.forgot-password[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{color:#0c487a;font-size:14px}.login-button[_ngcontent-%COMP%]{background-color:#0c487a;color:#fff;margin-bottom:20px;width:180px;padding:10px;font-size:18px;border-radius:80px}.signup-link[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:14px;color:#0c487a}ion-item[_ngcontent-%COMP%]{border-radius:50px;border-color:#0c487a;border-width:2px;border-style:solid;margin-bottom:20px}ion-icon[_ngcontent-%COMP%]{width:30px;height:30px}ion-input[_ngcontent-%COMP%]{font-size:18px}\"]\n  });\n  return LoginPage;\n})();\nexport { LoginPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}