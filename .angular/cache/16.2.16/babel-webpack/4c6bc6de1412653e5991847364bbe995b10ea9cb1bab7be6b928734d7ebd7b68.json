{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { doc, getDoc, updateDoc } from '@angular/fire/firestore';\nimport { getFirestore } from 'firebase/firestore';\nlet PerfilPage = class PerfilPage {\n  constructor(navCtrl, formBuilder, userService, firestore, router, loginService) {\n    this.navCtrl = navCtrl;\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.firestore = firestore;\n    this.router = router;\n    this.loginService = loginService;\n    this.imageSource = null;\n    this.formData = []; // Arreglo para almacenar los datos del formulario\n    //userdata\n    this.userData = {\n      name: \"\",\n      email: \"\",\n      lastname: \"\",\n      phone: \"\",\n      password: \"\"\n    };\n    this.ProfilePic = \"\";\n    this.finishedLoading = false;\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required]],\n      // password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.[a-z])(?=.[A-Z]).{8,}$/)]],\n      lastname: ['', Validators.required],\n      phone: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.[a-z])(?=.[A-Z]).{8,}$/)]]\n    });\n  }\n  ngOnInit() {\n    this.getUserData();\n    // this.userID = this.userService.getUser();\n  }\n\n  goBack() {\n    this.navCtrl.back();\n  }\n  cerrarsesion() {\n    this.router.navigate(['/login']);\n    this.loginService.setLogout();\n  }\n  displayImage(event) {\n    const input = event.target;\n    if (input.files && input.files[0]) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          this.imageSource = reader.result;\n        }\n      };\n      console.log(input.files[0]);\n      reader.readAsDataURL(input.files[0]);\n      this.userService.saveProfilePic(input.files[0]);\n      this.ProfilePic = input.files[0].name;\n      updateDoc(this.userDoc, {\n        ProfilePic: \"images\" + this.ProfilePic\n      }), error => {\n        console.log(error);\n      };\n    }\n  }\n  submitForm() {\n    if (this.myForm.valid) {\n      this.formData.push(this.myForm.value);\n      // Reiniciar el formulario\n      // this.myForm.reset();\n      console.log('Formulario enviado. Datos guardados:', this.formData);\n      this.updateUserData(this.myForm.value.name, this.myForm.value.phone, this.myForm.value.lastname, this.userDoc, this.userID);\n    }\n  }\n  regresar() {\n    this.router.navigate(['/tabs/tab4']);\n  }\n  isFormValid() {\n    return this.myForm.valid;\n  }\n  getUserData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const db = getFirestore();\n      const id = yield _this.userService.getUser();\n      // this.userService.getProfilePic(id).then((url) => {\n      //   this.imageSource = url;\n      // });\n      _this.userID = id;\n      console.log(_this.userID);\n      const docref = doc(db, 'Users', id);\n      _this.userDoc = docref;\n      console.log(docref);\n      try {\n        const docSnap = yield getDoc(docref);\n        console.log(docSnap.data());\n        const data = docSnap.data();\n        _this.userData.email = data.email;\n        _this.userData.name = data.name;\n        _this.userData.phone = data.phone;\n        _this.userData.lastname = data.lastname;\n        _this.ProfilePic = data.ProfilePic;\n      } catch (error) {\n        console.log(error);\n      }\n      _this.userService.getProfilePicURL(_this.ProfilePic).then(url => {\n        _this.imageSource = url;\n      });\n      //Usar esta variable para definir cuando quitar la barra de carga\n      _this.finishedLoading = true;\n    })();\n  }\n  updateUserData(name, phone, lastname, dbRef, id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.userService.updateUserData(name, phone, lastname, dbRef, id).then(() => {\n        console.log(\"Datos actualizados\");\n      }).catch(error => {\n        console.log(error);\n      });\n      _this2.getUserData();\n    })();\n  }\n};\nPerfilPage = __decorate([Component({\n  selector: 'app-perfil',\n  templateUrl: 'perfil.page.html',\n  styleUrls: ['perfil.page.scss']\n})], PerfilPage);\nexport { PerfilPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}