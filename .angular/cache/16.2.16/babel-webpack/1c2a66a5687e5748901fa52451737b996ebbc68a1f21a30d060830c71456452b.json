{"ast":null,"code":"import _asyncToGenerator from \"c:/Users/benji/OneDrive/Documents/smartmeds project/smart-meds-ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class PreferencesWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.group = 'CapacitorStorage';\n  }\n  configure({\n    group\n  }) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof group === 'string') {\n        _this.group = group;\n      }\n    })();\n  }\n  get(options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const value = _this2.impl.getItem(_this2.applyPrefix(options.key));\n      return {\n        value\n      };\n    })();\n  }\n  set(options) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.impl.setItem(_this3.applyPrefix(options.key), options.value);\n    })();\n  }\n  remove(options) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.impl.removeItem(_this4.applyPrefix(options.key));\n    })();\n  }\n  keys() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const keys = _this5.rawKeys().map(k => k.substring(_this5.prefix.length));\n      return {\n        keys\n      };\n    })();\n  }\n  clear() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      for (const key of _this6.rawKeys()) {\n        _this6.impl.removeItem(key);\n      }\n    })();\n  }\n  migrate() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const migrated = [];\n      const existing = [];\n      const oldprefix = '_cap_';\n      const keys = Object.keys(_this7.impl).filter(k => k.indexOf(oldprefix) === 0);\n      for (const oldkey of keys) {\n        const key = oldkey.substring(oldprefix.length);\n        const value = (_a = _this7.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n        const {\n          value: currentValue\n        } = yield _this7.get({\n          key\n        });\n        if (typeof currentValue === 'string') {\n          existing.push(key);\n        } else {\n          yield _this7.set({\n            key,\n            value\n          });\n          migrated.push(key);\n        }\n      }\n      return {\n        migrated,\n        existing\n      };\n    })();\n  }\n  removeOld() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const oldprefix = '_cap_';\n      const keys = Object.keys(_this8.impl).filter(k => k.indexOf(oldprefix) === 0);\n      for (const oldkey of keys) {\n        _this8.impl.removeItem(oldkey);\n      }\n    })();\n  }\n  get impl() {\n    return window.localStorage;\n  }\n  get prefix() {\n    return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n  }\n  rawKeys() {\n    return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n  }\n  applyPrefix(key) {\n    return this.prefix + key;\n  }\n}\n//# sourceMappingURL=web.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}